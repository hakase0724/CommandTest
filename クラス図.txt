@startuml
namespace Dishes{

 enum CookingType{
  Japanese
  Western
　Chinese
 }

 enum DishTemperature{
  Hot
  Cold
 }

 abstract class DishParent{
  FirePower needPower
  CookingType type
  DishTemperature temperature
 }

 class Dish{
 }

 DishParent <|-- Dish
 Fires.IFire <|-- DishParent
 Players.IMove <|-- DishParent
}

namespace Fires{

 enum FirePower{
  High
  Middle
  Low
 }

 interface IFire{
  +Burn()
  +bool IsPossibleBurn
 }

 class Fire{
  +FirePower firePower{get; private set;}
 }

 IFire -> Fire:燃焼確認
 IFire -> GameManegers.AreaManeger:登録
 IFire -[hidden]u-> Fire
}

namespace Players{

 class Player{
 }

 interface IMove{
 }

 Player -> IMove:動かす
}

namespace GameManegers{

 enum GameState{
  Intilaiz
  Move
  Fire
  Result
 }

 class AreaManeger{
  +readonly int width
  +readonly int height
  +IFire BurnObject[width,height]
  -bool IsBurn()
 }

 class MainManeger{
  -GameState gameState
 }

 namespace Timers{

  class TimeManeger{
  }
  
  class RxTimer{
  }

  TimeManeger -> RxTimer:タイマ起動＆監視
  TimeManeger -> GameManegers.MainManeger:タイマ終了通知

 }

 

 MainManeger -> GameManegers.Timers.TimeManeger:タイマ起動
 AreaManeger -[hidden]r-> MainManeger
}

namespace Gimmicks{

 class HealPoint{
 }

 class Bomb{
 }

 Fires.IFire <|-- HealPoint
 Fires.IFire <|-- Bomb
}
@enduml